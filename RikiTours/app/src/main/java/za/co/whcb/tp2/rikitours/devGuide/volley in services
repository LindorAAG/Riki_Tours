

JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(Request.Method.POST, url,
                new Response.Listener<JSONArray>()
                {
                    @Override
                    public void onResponse(JSONArray response) {
                        try {
                            JSONArray data = response.getJSONArray(0);
                            for (int i = 0; i < data.length(); i++) {
                                JSONObject jsonObject = data.getJSONObject(i);
                                long id = Long.parseLong(jsonObject.getString("customer_id"));
                                Display.toast(String.valueOf(id), context);
//                                String namme = jsonObject.getString("customer_name");
//                                String surnamme = jsonObject.getString("customer_surname");
//                                String gender = jsonObject.getString("customer_gender");
//                                String dob = jsonObject.getString("customer_dob");
//                                String email = jsonObject.getString("customer_email");
//                                String phone = jsonObject.getString("customer_phone");
//
//                                user = CustomerFactory.getCustomer(id,namme,surnamme, String.valueOf(id));
                                feedback = true;
                                //Log.d("Response", response);
                            }
                        }
                        catch (JSONException e) {
                            e.printStackTrace();
                            Display.toast("Error " + e.getMessage(), context);
                            feedback = false;

                        }
                    }
                },
                new Response.ErrorListener()
                {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        // error
                        Log.d("Error.Response", error.getMessage());
                    }
                }
        ) {
            @Override
            protected Map<String, String> getParams()
            {
                Map<String, String>  params = new HashMap<String, String>();
                params.put("email", email);
                params.put("password", password);

                return params;
            }

            @Override
            public Map<String, String> getHeaders() throws AuthFailureError {
                Map<String, String> headers = new HashMap<String, String>();
                headers.put("Content-Type", "application/x-www-form-urlencoded");
                return headers;
            }
        };

        requestQueue.add(jsonArrayRequest);
        return feedback;
    }



 http://stackoverflow.com/questions/12559461/how-to-show-progress-barcircle-in-an-activity-having-a-listview-before-loading




 package com.exampfle.real;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import android.app.AlertDialog;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;
import android.util.Log;

public class RealService extends Service{

    private static final String TAG="RealService";
    private boolean isRunning=false;
    private IBinder mBinder=new MyBinder();
    private boolean intenetAccess=false;
/* Change here */
    private RequestQueue reQueue;
    private final String url="http://www.google.com";

    public boolean SendRequest()
    {
/* Change here */
    reQueue = Volley.newRequestQueue(this);
        StringRequest request=new StringRequest(com.android.volley.Request.Method.GET,
                url,
                new Response.Listener<String>() {

            @Override
            public void onResponse(
                    String response) {

                intenetAccess=true;
            }
        },

        new Response.ErrorListener() {

            @Override
            public void onErrorResponse(
                    VolleyError error) {

                intenetAccess=false;

            }
        });

        try{
            reQueue.add(request);
        }
        catch(Exception e){}

        return intenetAccess;

    }

    @Override
    public void onCreate() {
        super.onCreate();
        Log.i(TAG, "Service onCreate");

        isRunning=true;

    }



    @Override
    public IBinder onBind(Intent intent) {
        Log.i(TAG, "Service onBind");
        return mBinder;
    }

    @Override
    public void onRebind(Intent intent) {
        Log.i(TAG, "Service onRebind");
        super.onRebind(intent);
    }

    @Override
    public boolean onUnbind(Intent intent) {
        Log.i(TAG, "Service onUnBind");
        return true;
    }

    @Override
    public void onDestroy() {

    isRunning=false;

        Log.i(TAG, "Service onDestroy");
        super.onDestroy();
    }



    public class MyBinder extends Binder
    {
        RealService getService()
        {
            return RealService.this;
        }
    }
}